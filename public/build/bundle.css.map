{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Form.svelte",
    "../../Start.svelte",
    "../../Results.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Start from './Start.svelte';\n\timport Form from './Form.svelte';\n\n\texport let menu = 1;\n</script>\n\n<main>\n\t<h1><a href='/'>Repartija</a></h1>\n\t<p class=\"subtitle\">No mas ebrios haciendo cuentas</p>\n\n\t{#if menu === 1}\n\t\t<Start on:click = {()=> menu = 2} />\n\t{:else if menu === 2}\n\t\t<Form/>\n\t\t<!--{console.log(menu)}-->\n\t{:else}\n\t\t<h1>\n\t\t\tPage Not Found\n\t\t</h1>\n\t{/if}\n\t\t\n</main>\n\n<style>\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>",
    "<script>\n  import { quintOut } from \"svelte/easing\";\n  import { crossfade } from \"svelte/transition\";\n  import { flip } from \"svelte/animate\";\n  import Results from \"./Results.svelte\";\n\n  const [send, receive] = crossfade({\n    fallback(node, params) {\n      const style = getComputedStyle(node);\n      const transform = style.transform === \"none\" ? \"\" : style.transform;\n\n      return {\n        duration: 600,\n        easing: quintOut,\n        css: t => `\n  \t\t\t\t\ttransform: ${transform} scale(${t});\n  \t\t\t\t\topacity: ${t}\n  \t\t\t\t`\n      };\n    }\n  });\n\n  let payments = [];\n  let total;\n  let individualPayment;\n  let name = \"\";\n  let pay;\n\n  let credAccum;\n  let actualCreditorAmount;\n\n  payments = [\n    {\n      id: 1,\n      done: true,\n      name: \"Bufarra\",\n      pay: 40\n    },\n    {\n      id: 2,\n      done: true,\n      name: \"Martin\",\n      pay: 600\n    },\n    {\n      id: 3,\n      done: true,\n      name: \"Joni\",\n      pay: 150\n    },\n    {\n      id: 4,\n      done: true,\n      name: \"Pedro\",\n      pay: 0\n    },\n    {\n      id: 5,\n      done: true,\n      name: \"Cachi\",\n      pay: 0\n    },\n    {\n      id: 6,\n      done: true,\n      name: \"Gisela\",\n      pay: 200\n    },\n    {\n      id: 7,\n      done: true,\n      name: \"Eze\",\n      pay: 0\n    }\n  ];\n\n  let result = [\n    {\n      name: \"juan\",\n      debtorss: [{ name: \"ana\", pay: 22 }, { name: \"mario\", pay: 33 }]\n    },\n    {\n      name: \"juanita\",\n      debtorss: [{ name: \"anita\", pay: 55 }, { name: \"marito\", pay: 66 }]\n    }\n  ];\n\n  function add() {\n    let uid = payments.length + 1;\n    const payment = {\n      id: uid++,\n      done: false,\n      name: name,\n      pay: pay\n    };\n    payments = [payment, ...payments];\n  }\n\n  function remove(payment) {\n    payments = payments.filter(t => t !== payment);\n  }\n\n  $: calculate = function() {\n    let yetToPay;\n    let balance = prepareDataSet();\n    let { creditors, debtors } = devideList(balance);\n\n    //let result = creditors.map(cred => collect(cred.name, cred.pay));\n\n    return {\n      total,\n      individualPayment,\n      result\n    };\n  };\n\n  $: prepareDataSet = function() {\n    let payers = payments.filter(t => t.done);\n    total = payers.reduce((a, b) => a + (b[\"pay\"] || 0), 0);\n    individualPayment = (total / payers.length).toFixed();\n    return payers.map(payment => {\n      payment = {\n        ...payment, //spread all props to new object except the one you need to change\n        pay: individualPayment - payment.pay\n      };\n      return payment;\n    });\n  };\n\n  $: devideList = function(balance) {\n    return {\n      creditors: balance.filter(e => e.pay < 0),\n      debtors: balance.filter(e => e.pay >= 0)\n    };\n  };\n\n  $: collect = function(creditor, credAmount) {\n    actualCreditorAmount = credAmount;\n    credAccum = 0;\n    debtors.map(debtor => toPay(debtor.name, debtor.pay, creditor, credAmount));\n  };\n\n  $: toPay = function(debtor, debt, creditor, credAmount) {\n    if (debt > 0 && credAmount < 0) {\n      credAccum += debt;\n      yetToPay = credAccum + credAmount;\n      if (yetToPay > 0 && yetToPay < individualPayment) {\n        let paiment = debt - yetToPay;\n        balance(creditor, debtor, payment);\n      } else if (debt < individualPayment) {\n        balance(creditor, debtor, debt);\n      } else if (yetToPay <= 0) {\n        balance(creditor, debtor, individualPayment);\n      }\n    }\n  };\n\n  $: balance = function(creditor, debtor, paiment) {\n    debtors[debtor] = yetToPay;\n    creditors[creditor] += paiment;\n    actualCreditorAmount = creditors[creditor];\n  };\n</script>\n\n<style>\n  .board {\n    max-width: 36em;\n    margin: 0 auto;\n  }\n\n  input {\n    position: relative;\n    opacity: 0.8;\n    margin: 10px;\n    border: 0;\n    background-color: black;\n    padding: 10px;\n    color: white;\n    font-size: 22px;\n  }\n\n  input[type=\"button\"] {\n    background: red;\n    color: white;\n  }\n\n  input[type=\"checkbox\"] {\n    margin: 0;\n    display: none;\n  }\n\n  .left,\n  .right {\n    float: left;\n    width: 50%;\n    padding: 0 0.5em 0 0;\n    box-sizing: border-box;\n  }\n\n  h2 {\n    font-size: 2em;\n    font-weight: 200;\n  }\n\n  label {\n    top: 0;\n    left: 0;\n    display: block;\n    text-align: left;\n    font-size: 0.9em;\n    line-height: 1;\n    padding: 0.3em;\n    margin: 0 auto 0.3em auto;\n    border-radius: 2px;\n    background-color: black;\n    user-select: none;\n  }\n\n  .right label {\n    background-color: rgb(92, 160, 2);\n  }\n\n  .badge {\n    float: right;\n    position: relative;\n    top: -4px;\n    padding: 5px 10px;\n    border-radius: 50%;\n    background: red;\n    color: white;\n    border: 0px;\n  }\n</style>\n\n<div class=\"board\">\n  <div>\n    <input type=\"text\" placeholder=\"Nombre\" bind:value={name} />\n  </div>\n  <div>\n    <input type=\"number\" placeholder=\"¿cuánto gastó?\" bind:value={pay} />\n  </div>\n  <div>\n    <input type=\"button\" value=\"Agregar al listado\" on:click={add} />\n  </div>\n\n  <div class=\"left\">\n    <h2>Vinieron</h2>\n    {#each payments.filter(t => !t.done) as payment (payment.id)}\n      <label\n        in:receive={{ key: payment.id }}\n        out:send={{ key: payment.id }}\n        animate:flip>\n        <input type=\"checkbox\" bind:checked={payment.done} />\n        {payment.name + ': ' + payment.pay}\n        <button class=\"badge\" on:click={() => remove(payment)}>X</button>\n      </label>\n    {/each}\n  </div>\n\n  <div class=\"right\">\n    <h2>Pagan</h2>\n    {#each payments.filter(t => t.done) as payment (payment.id)}\n      <label\n        in:receive={{ key: payment.id }}\n        out:send={{ key: payment.id }}\n        animate:flip>\n        <input type=\"checkbox\" bind:checked={payment.done} />\n        {payment.name + ': ' + payment.pay}\n        <button class=\"badge\" on:click={() => remove(payment)}>X</button>\n      </label>\n    {/each}\n  </div>\n\n  <Results {...calculate()} />\n\n</div>\n",
    "<main>\n  <p>Comenzá y pasale el 📲 al de tu izq y que se agregue,\n    así hasta que vuelva a vos,\n    colocas tus datos y deslizás \"soy el último\",\n    luego al agregarte verás la magia 👻 </p>\n\n  <button on:click><span>comenzar </span></button>\n\n</main>\n\n<style>\n  main {\n    -moz-transition-duration: 0.5s;\n    -webkit-transition-duration: 0.5s;\n    font-family: 'Satisfy', Helvetica, cursive;\n    text-shadow: 1px 1px 7px black;\n  }\n\n  button {\n    display: inline-block;\n    border-radius: 4px;\n    background-color: #f4511e;\n    border: none;\n    color: #FFFFFF;\n    text-align: center;\n    font-size: 28px;\n    padding: 20px;\n    width: 200px;\n    transition: all 0.5s;\n    cursor: pointer;\n    margin: 5px;\n  }\n\n  button span {\n    cursor: pointer;\n    display: inline-block;\n    position: relative;\n    transition: 0.5s;\n  }\n\n  button span:after {\n    content: '\\00bb';\n    position: absolute;\n    opacity: 0;\n    top: 0;\n    right: -20px;\n    transition: 0.5s;\n  }\n\n  button:hover span {\n    padding-right: 25px;\n  }\n\n  button:hover span:after {\n    opacity: 1;\n    right: 0;\n  }\n</style>",
    "<script>\n  export let total;\n  export let individualPayment;\n  export let result;\n</script>\n\n<style>\n  .box {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding-right: 80px;\n    width: 100vw;\n  }\n\n  .box .debtors {\n    padding-left: 80px;\n    align-self: center;\n  }\n</style>\n\n<p class=\"left\">total: {total}</p>\n<p class=\"right\">pago individual: {individualPayment}</p>\n<h1>Resultado:</h1>\n<div class=\"box\">\n\n  {#each result as item}\n    <div>\n      A\n      <b>{item.name}</b>\n      le deben pagar\n    </div>\n    {#each item.debtorss as d}\n      <div class=\"debtors\">{d.name + ': ' + d.pay}</div>\n    {/each}\n  {/each}\n\n</div>\n<br />\n<br />\n"
  ],
  "names": [],
  "mappings": "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"
}